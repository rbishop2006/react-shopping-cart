{"version":3,"sources":["redux/ducks/products/Products.js","redux/ducks/cart/Cart.js","components/Products.js","components/Checkout.js","components/receipt.js","components/App.js","serviceWorker.js","redux/store.js","index.js"],"names":["SET_COUNT","initialState","products","count","state","action","type","payload","getProducts","dispatch","axios","get","then","resp","data","length","ADD_CART","DEL_CART","DEL_ALL","cart","exists","filter","product","id","item","find","quantity","map","p","useCart","useDispatch","useSelector","appState","cartState","useEffect","add","addCart","del","delAllItems","delAll","props","productState","useProducts","useState","show","setShow","total","reduce","a","b","price","className","htmlFor","value","onClick","e","key","isFreeShipping","src","imgs","normal","alt","title","toFixed","installments","currencyFormat","thumb","style","to","pathname","exact","path","render","component","Products","Checkout","Receipt","Boolean","window","location","hostname","match","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","reducers","enhancer","applyMiddleware","thunk","store","createStore","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d44bc871.chunk.js","sourcesContent":["// 1. imports\nimport { useEffect } from \"react\"\nimport { useSelector, useDispatch } from \"react-redux\"\nimport axios from \"axios\"\n\n// 2. action definitions\nconst GET_PRODUCTS = \"products/GET_PRODUCTS\"\nconst SET_COUNT = \"products/SET_COUNT\"\n\n// 3. initial state\nconst initialState = {\n  products: [],\n  count: 0\n}\n\n// 4. reducer\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case GET_PRODUCTS:\n      return { ...state, products: action.payload }\n    case SET_COUNT:\n      return { ...state, count: action.payload }\n\n    default:\n      return state\n  }\n}\n\n// 5. action creators\nfunction getProducts() {\n  return dispatch => {\n    axios.get(\"/products\").then(resp => {\n      dispatch(getCount())\n      dispatch({\n        type: GET_PRODUCTS,\n        payload: resp.data\n      })\n    })\n  }\n}\n\nfunction getCount() {\n  return dispatch => {\n    axios.get(\"/products\").then(resp => {\n      dispatch({\n        type: SET_COUNT,\n        payload: resp.data.length\n      })\n    })\n  }\n}\n\n// 6. custom hooks\n\nexport function useProducts() {\n  const dispatch = useDispatch()\n  const products = useSelector(appState => appState.productState.products)\n  const count = useSelector(appState => appState.productState.count)\n\n  useEffect(() => {\n    dispatch(getProducts())\n  }, [dispatch])\n  return { products, count }\n}\n","// 1. imports\nimport { useEffect } from \"react\"\nimport { useDispatch, useSelector } from \"react-redux\"\n\n// 2. action definitions\n\nconst ADD_CART = \"products/ADD_CART\"\nconst DEL_CART = \"products/DEL_CART\"\nconst DEL_ALL = \"products/DEL_ALL\"\n\n// 3. initial state\nconst initialState = {\n  cart: []\n}\n// 4. reducer\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_CART:\n      const exists =\n        state.cart.filter(product => product.id === action.payload.id).length >\n        0\n      if (exists) {\n        const item = state.cart.find(\n          product => product.id === action.payload.id\n        )\n        item.quantity = item.quantity + 1\n\n        return {\n          ...state,\n          cart: state.cart.map(p => (item.id === p.id ? item : p))\n        }\n      } else {\n        return {\n          ...state,\n          cart: [...state.cart, { ...action.payload, quantity: 1 }]\n        }\n      }\n    case DEL_CART:\n      if (state.cart.find(item => item.id === action.payload).quantity === 1) {\n        return {\n          ...state,\n          cart: state.cart.filter(item => item.id !== action.payload)\n        }\n      } else {\n        return {\n          ...state,\n          cart: state.cart.map(item => {\n            if (item.id === action.payload) {\n              item.quantity = item.quantity - 1\n              return item\n            } else {\n              return item\n            }\n          })\n        }\n      }\n    case DEL_ALL:\n      return {\n        ...state,\n        cart: state.cart.filter(item => item.id !== action.payload)\n      }\n\n    default:\n      return state\n  }\n}\n// 5. action creators\n\nfunction addCart(product) {\n  return {\n    type: ADD_CART,\n    payload: product\n  }\n}\n\nfunction delCart(productId) {\n  return {\n    type: DEL_CART,\n    payload: productId\n  }\n}\n\nfunction delAll(item) {\n  return {\n    type: DEL_ALL,\n    payload: item\n  }\n}\n\n// 6. custom hooks\n\nexport function useCart() {\n  const dispatch = useDispatch()\n  const cart = useSelector(appState => appState.cartState.cart)\n  const add = product => dispatch(addCart(product))\n  const del = item => dispatch(delCart(item))\n  const delAllItems = item => dispatch(delAll(item))\n\n  useEffect(() => {}, [dispatch])\n  return { add, cart, del, delAllItems }\n}\n","import React, { useState } from \"react\"\nimport { Link } from \"react-router-dom\"\nimport { useProducts, useCart } from \"../hooks\"\nimport \"../styles/products.css\"\nimport { TiShoppingCart } from \"react-icons/ti\"\n\nexport default props => {\n  const { products, count } = useProducts()\n  const { cart, add, del, delAllItems } = useCart()\n  const [show, setShow] = useState(false)\n  const total = cart.reduce((a, b) => {\n    return a + b.price * b.quantity\n  }, 0)\n\n  return (\n    <div className=\"wrapper\">\n      <div className=\"orderSelect\">\n        <p>{count} Product(s) found.</p>\n        <div>\n          <label htmlFor=\"orderBy\">Order by </label>\n\n          <select id=\"orderBy\">\n            <option value=\"select\">Select</option>\n            <option value=\"LowestToHighest\">Lowest To highest</option>\n            <option value=\"HighestToLowest\">Highest To lowest</option>\n          </select>\n        </div>\n      </div>\n      <div className=\"grid\">\n        {products.map(product => (\n          <div\n            className=\"centerGridItems\"\n            onClick={e => add(product)}\n            key={\"product\" + product.id}\n          >\n            <p className={product.isFreeShipping ? \"free\" : \"costs\"}>\n              Free Shipping\n            </p>\n            <img\n              className=\"productImgs\"\n              key={\"product\" + product.id}\n              src={product.imgs.normal}\n              alt=\"mens shirts\"\n            />\n            <p>{product.title}</p>\n            <div className=\"smallBorder\"></div>\n            <p className=\"pricing\">${product.price.toFixed(2)}</p>\n            <p className=\"installments\">\n              or {product.installments} x{product.currencyFormat}\n              {(product.price / product.installments).toFixed(2)}\n            </p>\n            <button className=\"addToCart\">Add to Cart</button>\n          </div>\n        ))}\n      </div>\n\n      <div className={show ? \"cart\" : \"unseen\"}>\n        <button className=\"cartButton\" onClick={e => setShow(!show)}>\n          <TiShoppingCart />\n        </button>\n        <div className=\"cartHeader\">\n          <p>\n            {\" \"}\n            <TiShoppingCart />\n          </p>\n          <p>Cart</p>\n        </div>\n        <div className=\"cartAllItems\">\n          {cart.map(item => (\n            <div className=\"cartItems\" key={\"item\" + item.id}>\n              <div>\n                <img\n                  className=\"thumbs\"\n                  key={\"item\" + item.id}\n                  src={item.imgs.thumb}\n                  alt=\"mens shirts\"\n                />\n              </div>\n              <div className=\"itemInfo\">\n                <p className=\"itemTitle\">{item.title}</p>\n                <p className=\"itemStyle\">{item.style}</p>\n                <p className=\"quantityCount\">Quantity: {item.quantity}</p>\n              </div>\n              <div className=\"itemTotals\">\n                <button\n                  type=\"button\"\n                  className=\"delButton\"\n                  onClick={e => delAllItems(item.id)}\n                >\n                  x\n                </button>\n                <p className=\"itemPrice\">${item.price.toFixed(2)}</p>\n                <div className=\"quantitiesButtons\">\n                  <button\n                    onClick={e => del(item.id)}\n                    className=\"lessQuantity\"\n                    type=\"button\"\n                  >\n                    -\n                  </button>\n                  <button\n                    onClick={e => add(item)}\n                    className=\"moreQuantity\"\n                    type=\"button\"\n                  >\n                    +\n                  </button>\n                </div>\n              </div>\n            </div>\n          ))}\n        </div>\n        <div className=\"absoluteFooter\">\n          <div className=\"cartFooter\">\n            <p>SUBTOTAL</p>\n            <div>\n              <p className=\"grandSubTotal\">${total.toFixed(2)}</p>\n            </div>\n          </div>\n          <div className=\"\">\n            <Link\n              className=\"linkToCheckout\"\n              to={{ pathname: \"/checkout\", data: cart }}\n            >\n              <div className=\"checkoutButton\">\n                <button className=\"checkoutButtonButton\">Checkout</button>\n              </div>\n            </Link>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React from \"react\"\nimport { Link } from \"react-router-dom\"\nimport { useCart } from \"../hooks\"\n// import \"../styles/products.css\"\nimport { TiShoppingCart } from \"react-icons/ti\"\n\nexport default props => {\n  const { cart } = useCart()\n\n  const total = cart.reduce((a, b) => {\n    return a + b.price * b.quantity\n  }, 0)\n\n  return (\n    <div className=\"checkoutWrapper\">\n      <div className=\"\">\n        <div className=\"checkOutHeader\">\n          <h1>Order Summary</h1>\n        </div>\n        {cart.map(item => (\n          <div className=\"checkOutItems\" key={\"item\" + item.id}>\n            <div className=\"\">\n              <p className=\"checkOutItemTitle\">{item.title}</p>\n              <p className=\"checkOutItemStyle\">{item.style}</p>\n              <p className=\"checkOutItemQuantity\">Quantity: {item.quantity}</p>\n            </div>\n            <div className=\"checkOutPrice\">\n              <p className=\"\">${item.price.toFixed(2)}</p>\n            </div>\n          </div>\n        ))}\n      </div>\n      <div className=\"\">\n        <div className=\"checkOutFooter\">\n          <p>SUBTOTAL</p>\n          <div>\n            <p className=\"checkOutFooterPrice\">${total.toFixed(2)}</p>\n          </div>\n        </div>\n      </div>\n      <div className=\"shopOrConfirm\">\n        <Link to=\"/\">\n          <button className=\"contShopping\">Continue Shopping</button>\n        </Link>\n        <Link to={{ pathname: \"/receipt\", data: cart }}>\n          <button className=\"confirmOrder\">Confirm Order</button>\n        </Link>\n      </div>\n    </div>\n  )\n}\n","import React from \"react\"\nimport { Link } from \"react-router-dom\"\nimport { useCart } from \"../hooks\"\n// import \"../styles/products.css\"\nimport { TiShoppingCart } from \"react-icons/ti\"\n\nexport default props => {\n  const { cart } = useCart()\n\n  const total = cart.reduce((a, b) => {\n    return a + b.price * b.quantity\n  }, 0)\n\n  return (\n    <div className=\"receiptWrapper\">\n      <div className=\"receiptThankYou\">\n        <h1>Thank you for your order!</h1>\n        <h2>Order confirmed</h2>\n        <h3>Receipt</h3>\n      </div>\n      {cart.map(item => (\n        <div className=\"receiptItem\" key={\"item\" + item.id}>\n          <div className=\"receiptItemDesc\">\n            <p className=\"receiptTitle\">{item.title}</p>\n            <p className=\"receiptStyle\">{item.style}</p>\n            <p className=\"receiptQuantity\">Quantity: {item.quantity}</p>\n          </div>\n          <div className=\"receiptItem2\">\n            <p className=\"receiptItemPrice\">${item.price.toFixed(2)}</p>\n          </div>\n        </div>\n      ))}\n      <div className=\"receiptFooter\">\n        <div className=\"receiptSubtotal\">\n          <p>SUBTOTAL</p>\n          <div>\n            <p className=\"receiptFooterPrice\">${total.toFixed(2)}</p>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React from \"react\"\nimport { Route, Redirect } from \"react-router-dom\"\nimport \"../styles/App.css\"\nimport Products from \"./Products.js\"\nimport Checkout from \"./Checkout.js\"\nimport Receipt from \"./receipt.js\"\n\nexport default (props) => {\n  return (\n    <div>\n      <Route\n        exact\n        path=\"/\"\n        render={() => <Redirect to=\"/react-shopping-cart\" />}\n      ></Route>\n      <Route path=\"/react-shopping-cart\" component={Products}></Route>\n      <Route path=\"/checkout\" component={Checkout}></Route>\n      <Route path=\"/receipt\" component={Receipt}></Route>\n    </div>\n  )\n}\n\n// adding comments for build\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { createStore, combineReducers, applyMiddleware, compose } from \"redux\"\nimport thunk from \"redux-thunk\"\nimport * as reducers from \"./ducks\"\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\nconst rootReducer = combineReducers(reducers)\nconst enhancer = composeEnhancers(applyMiddleware(thunk))\n\nconst store = createStore(rootReducer, enhancer)\n\nexport default store\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport { BrowserRouter as Router } from \"react-router-dom\"\nimport App from \"./components/App\"\nimport \"normalize.css/normalize.css\"\nimport \"./styles/base.css\"\nimport * as serviceWorker from \"./serviceWorker\"\nimport { Provider } from \"react-redux\"\nimport store from \"./redux/store\"\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>,\n  document.getElementById(\"root\")\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}